#+title: epydemic

* epydemic: Epidemic simulation in Python                           :PROJECT:

** Release planning

*** Release 1.7.1

**** Coding [0/2]

    - [ ] Add degree-distribution-preserving rewiring functions to
      randomise networks while preserving p_k or P(k, k')
      cite:UnreasonableEffectiveness
    - [ ] Integrate GF library

** Sub-projects

*** Acceleration

**** GPU acceleration

 Will need to be [[https://docs.nvidia.com/datacenter/cloud-native/container-toolkit/overview.html][containerised]].

**** Cython acceleration

     Using Cython requires code changes. They're only annotations, to
     provide C types for variables and calling conventions on methods
     -- but fairly substantial changes, and not backwards compatible,
     meaning it'd be a commitment

     Also compare against [[https://github.com/pyston/pyston][Pyston]]

*** Containerisation

    To run in the cloud we need to be able to containerise. There are a
    couple of options here:

    1. A single container running on a multicore host, extended with
       whatever code is needed for the application. This is
       straightforward, but limited by the single-host performance
       (which might be fine for a lot of applications).
    2. Multiple containers acting together, with a virtual network
       between them. This probably needs ~docker-compose~ and some
       tests to see whether it's possible to run ~ipyparallel~ in this
       way (which I think it is).

*** Generating function library

    We need a generating functions library, perhaps alongside the
    network generator classes, so we can use this formalism easily
    alongside epydemic's simulations. In particular we need the
    high-order-numerical-derivative function to be able to extract
    probabilities etc.

    The biggest challenge might be to write documentation....

    There's another approach alongside this, which would be to write a
    symbolic package with the generating functions in them, for use in
    Sage. This would then complement the numerical side.

*** Paper on draw set implementation

**** TODO Complete analysis of fairness
     SCHEDULED: <2021-06-04 Fri>
**** TODO Ask Len Thomas about other statistical tests
**** TODO Numerical exploration
**** TODO First draft
